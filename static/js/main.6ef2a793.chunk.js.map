{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["socket","App","useState","name","setName","room","setRoom","joined","setJoined","message","setMessage","messages","setMessages","useEffect","console","log","on","data","className","onSubmit","e","preventDefault","io","connect","emit","type","placeholder","onChange","target","value","required","id","map","ms","i","onClick","disconnect","off","div","document","getElementById","scrollTop","scrollHeight","scrollSmoothToBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wKAQIA,E,kECRW,I,kCDuHAC,MA9Gf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGeJ,oBAAS,GAHxB,mBAGNK,EAHM,KAGEC,EAHF,OAIiBN,mBAAS,IAJ1B,mBAINO,EAJM,KAIGC,EAJH,OAOmBR,mBAAS,IAP5B,mBAONS,EAPM,KAOIC,EAPJ,KA4Eb,OAjCAC,qBAAU,WACRC,QAAQC,IAAI,UACRf,GACFA,EAAOgB,GAAG,gBAAgB,SAAAC,GACpBA,EAAKZ,OAASA,GAChBO,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAER,KAAMc,EAAKd,KAAMM,QAASQ,EAAKR,iBAIhE,CAACT,EAAQS,IAyBV,sBAAKS,UAAU,YAAf,WACIX,GACA,uBAAMW,UAAU,YAAYC,SAtElC,SAAoBC,GAClBA,EAAEC,iBACFb,GAAU,GACV,IAAIS,EAAO,CAAEd,OAAME,SACnBL,EAASsB,IAAGC,QAfC,wCAgBNC,KAAK,OAAQP,IAiEhB,UAEE,sCACA,uBAAOC,UAAU,QAAQO,KAAK,OAAOC,YAAY,OAAOC,SAAU,SAACP,GAAD,OAAOhB,EAAQgB,EAAEQ,OAAOC,QAAQC,UAAQ,IAC1G,uBAAOZ,UAAU,QAAQO,KAAK,OAAOC,YAAY,OAAOC,SAAU,SAACP,GAAD,OAAOd,EAAQc,EAAEQ,OAAOC,QAAQC,UAAQ,IAC1G,6CAIHvB,GACC,qCACE,uBAAMW,UAAU,WAAWC,SArDnC,SAAqBC,GACnBA,EAAEC,iBACFrB,EAAOwB,KAAK,eAAgB,CAAEf,UAASN,OAAME,SAC7CK,EAAW,KAkDL,UACE,sBAAKQ,UAAU,QAAf,UACE,wCAAWb,KACX,uCAAUF,QAEZ,qBAAK4B,GAAG,oBAAoBb,UAAU,oBAAtC,SAvCDP,EAASqB,KAAI,SAACC,EAAIC,GACvB,OAAID,EAAG9B,OAASA,EAEZ,sBAAae,UAAU,aAAvB,UACE,yCACA,qBAAIA,UAAU,eAAd,UAA8Be,EAAGxB,QAAjC,SAFQyB,GAOZ,sBAAahB,UAAU,UAAvB,UACE,+BAAKe,EAAG9B,KAAR,OACA,oBAAIe,UAAU,eAAd,SAA8Be,EAAGxB,YAFzByB,QAgCN,uBAAOhB,UAAU,aAAaO,KAAK,OAAOC,YAAY,UAAUC,SAAU,SAACP,GAAD,OAAOV,EAAWU,EAAEQ,OAAOC,QAAQC,UAAQ,EAACD,MAAOpB,OAG/H,wBAAQS,UAAU,eAAeiB,QAtEzC,WACEnC,EAAOwB,KAAK,QAAS,CAAErB,OAAME,SAC7BL,EAAOoC,aACPpC,EAAOqC,MACP7B,GAAU,IAkEJ,6BACA,wBAAQ2B,QA7BhB,YAvDA,SAA8BJ,GAC5B,GAAIxB,EAAQ,CACV,IAAI+B,EAAMC,SAASC,eAAeT,GAKlCO,EAAIG,UAAYH,EAAII,cAiDtBC,CAAqB,sBA4Bf,yBEnGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BI,M","file":"static/js/main.6ef2a793.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport react, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\nimport queryString from 'query-string'\nimport $ from 'jquery';\n\nconst ENDPOINT = 'https://thera-server.herokuapp.com/'\nlet socket;\nfunction App() {\n  const [name, setName] = useState('')\n  const [room, setRoom] = useState('')\n  const [joined, setJoined] = useState(false)\n  const [message, setMessage] = useState('')\n\n  //moi lan reload thi message mat het---y tuong cua socket, va component trong react\n  const [messages, setMessages] = useState([])\n\n  function handleJoin(e) {\n    e.preventDefault()\n    setJoined(true)\n    let data = { name, room }\n    socket = io.connect(ENDPOINT)\n    socket.emit('join', data)\n  }\n\n\n  function scrollSmoothToBottom(id) {\n    if (joined) {\n      var div = document.getElementById(id);\n\n      // $('#' + id).animate({\n      //     scrollTop: div.scrollHeight - div.clientHeight\n      // }, 500);\n      div.scrollTop = div.scrollHeight;\n    }\n\n  }\n\n\n  function handleLeave() {\n    socket.emit('leave', { name, room })\n    socket.disconnect()\n    socket.off()\n    setJoined(false)\n  }\n  function sendMessage(e) {\n    e.preventDefault()\n    socket.emit('send-message', { message, name, room })\n    setMessage('')\n  }\n\n  useEffect(() => {\n    console.log(\"called\")\n    if (socket) {\n      socket.on('send-message', data => {\n        if (data.room === room) {\n          setMessages([...messages, { name: data.name, message: data.message }])\n        }\n      })\n    }\n  }, [socket, message])\n\n\n  function messageSection() {\n    return messages.map((ms, i) => {\n      if (ms.name === name) {\n        return (\n          <div key={i} className=\"my-message\"   >\n            <h3>&nbsp;you</h3>\n            <h4 className=\"message-text\">{ms.message} </h4>\n          </div>\n        )\n      }\n      return (\n        <div key={i} className=\"message\">\n          <h3>{ms.name}:</h3>\n          <h4 className=\"message-text\">{ms.message}</h4>\n        </div>\n      )\n    })\n  }\n  function test() {\n    scrollSmoothToBottom(\"message-container\")\n  }\n  return (\n    <div className=\"container\">\n      {!joined &&\n        <form className=\"join-form\" onSubmit={handleJoin}>\n\n          <h1>CHAT</h1>\n          <input className=\"input\" type=\"text\" placeholder=\"name\" onChange={(e) => setName(e.target.value)} required />\n          <input className=\"input\" type=\"text\" placeholder=\"room\" onChange={(e) => setRoom(e.target.value)} required />\n          <button>Join</button>\n        </form>\n      }\n\n      {joined &&\n        <>\n          <form className=\"chat-box\" onSubmit={sendMessage}>\n            <div className=\"title\" >\n              <h2>room: {room}</h2>\n              <h2>you: {name}</h2>\n            </div>\n            <div id=\"message-container\" className=\"message-container\">\n              {messageSection()}\n            </div>\n            <input className=\"input-text\" type=\"text\" placeholder=\"message\" onChange={(e) => setMessage(e.target.value)} required value={message} />\n          </form>\n\n          <button className=\"button-leave\" onClick={handleLeave}>leave this shit</button>\n          <button onClick={test}>test</button>\n        </>\n\n      }\n    </div>\n  )\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}